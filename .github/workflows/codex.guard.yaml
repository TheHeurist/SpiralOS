name: Codex Provenance Guard
on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  codex_guard:
    name: üåÄ SpiralOS Codex Provenance Validation
    runs-on: ${{ matrix.os }}
    strategy:
        matrix:
        os: [ubuntu-latest, windows-latest]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Git
        run: |
          git config --global user.name "Codex Provenance Bot"
          git config --global user.email "codex@spiralos.ai"

      - name: Run Codex Provenance Validation
        run: |
          echo "üîç Running Codex validation..."
          if [ ! -f docs/codex/CI-Watermark.json ]; then
            echo "‚ùå CI-Watermark not found. Exiting."; exit 1;
          fi
          jq '.' docs/codex/CI-Watermark.json > /dev/null || (echo "‚ùå Invalid JSON in CI-Watermark.json" && exit 1)
          echo "‚úÖ Codex verification passed."

      - name: Compute and Inject Codex Integrity Hash
        run: |
          bash scripts/codex-integrity.sh
      - name: Compute and Inject Codex Integrity Hash (Windows)
        if: runner.os == 'Windows'
        run: pwsh scripts/codex-integrity.ps1

      - name: Compute and Inject Codex Integrity Hash (Unix)
        if: runner.os != 'Windows'
        run: bash scripts/codex-integrity.sh

      - name: Stage Provenance Artifacts
        run: |
          echo "üì¶ Staging provenance artifacts..."
          git add docs/codex/CI-Watermark.json README.md || true

      - name: Commit Provenance Results
        run: |
          echo "üßæ Attempting provenance commit..."
          git commit -m "Codex Provenance: Validated and signed CI-Watermark" || echo "‚ÑπÔ∏è No changes to commit"

      - name: Rebase and Push Safely
        run: |
          echo "üîÑ Rebasing and pushing to main..."
          n=0
          until [ $n -ge 5 ]; do
            git pull --rebase origin main && git push origin HEAD:main && break
            n=$((n+1))
            echo "‚ö†Ô∏è Conflict detected. Retrying ($n)..."
            sleep 5
          done
          echo "‚úÖ Provenance sync complete."

      - name: Confirm Completion
        run: echo "üéØ Codex Provenance Guard completed successfully."
